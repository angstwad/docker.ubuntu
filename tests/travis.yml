---
- name: Bring up docker containers
  hosts: localhost
  gather_facts: false
  vars:
    inventory:
      - name: ubuntu1204
        image: "chrismeyers/ubuntu12.04"
      - name: ubuntu1404
        image: "ubuntu:14.04"  
      - name: ubuntu1604
        image: "ubuntu:16.04" 
      - name: debian
        image: "debian:jessie"
  roles:
    - role: provision_docker
      provision_docker_inventory: "{{inventory}}"
      tags: provision_docker

- name: Install python on Debian
  hosts: 
    - ubuntu1604
    - ubuntu1404
  gather_facts: false
  tasks:
    - raw: apt-get update && apt-get -y install python-minimal
  become: true
  
- name: Install lsb release on Debian
  hosts: debian
  gather_facts: false
  tasks:
    - raw: apt-get update && apt-get -y install lsb-release
  become: true
  
- name: Run role and run tests on all supported OSs
  hosts: 
    - ubuntu1204
#     - ubuntu1404
#     - ubuntu1604
#     - debian
  gather_facts: false
  roles:
    - role: docker.ubuntu
      docker_http_proxy: "{{ ansible_env.http_proxy|default('http://foo.bar.com:3128') }}"
      docker_https_proxy: "{{ ansible_env.https_proxy|default('https://foo.bar.com:3128') }}"
  pre_tasks:
    - name: Gathering facts
      setup:
  tasks:
    - name: Test if HTTP_PROXY environment variable not set
      debug:
        msg: "HTTP_PROXY was set to {{ lookup('env', 'HTTP_PROXY') }}" 
#       fail:
#         msg: "HTTP_PROXY env variable is {{ ansible_env.HTTP_PROXY }} instead of ..."
#       when: (ansible_env.HTTP_PROXY != "http://foo.bar.com:3128") or
#             (ansible_env.HTTP_PROXY is undefined) or 
#             (ansible_env.HTTP_PROXY is none) or 
#             (ansible_env.HTTP_PROXY | trim == '')

- name: Ubuntu 1604 specific tests
  hosts: ubuntu1604
  tasks:
    - name: Tests if http-proxy.conf exists.
      stat: 
        path: /etc/systemd/system/docker.service.d/http-proxy.conf
      register: docker_systemd_file
    - fail:
        msg: "/etc/systemd/system/docker.service.d/http-proxy.conf missing"
      when: not docker_systemd_file.stat.exists

